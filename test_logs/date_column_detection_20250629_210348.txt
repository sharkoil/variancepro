===== VariancePro Test Results: date_column_detection =====
Started: 2025-06-29 21:03:48
System: nt
============================================================

Testing date column detection on 5 sample files
Current directory: F:\Projects\VARIANCEPRO


----- Testing file: sales_budget_actuals.csv -----
Successfully loaded file with 24 rows and 13 columns
Columns in the dataset:
- period_end: object, Sample: ['2024-02-29', '2024-07-31', '2023-04-30']
- budget_sales: int64, Sample: [128260, 139130, 106521]
- budget_volume: int64, Sample: [2565, 2782, 2130]
- budget_price: float64, Sample: [50.0, 50.0, 50.0]
- budget_marketing: int64, Sample: [6173, 8184, 13046]
- budget_raw_mat_cost: int64, Sample: [20202, 29422, 31878]
- actual_sales: int64, Sample: [128346, 124496, 117239]
- actual_volume: int64, Sample: [2488, 2517, 2455]
- actual_price: float64, Sample: [51.59, 49.46, 47.76]
- actual_marketing: int64, Sample: [4950, 7349, 12416]
- actual_raw_mat_cost: int64, Sample: [18554, 29460, 34387]
- region: object, Sample: ['South', 'West', 'West']
- product_line: object, Sample: ['Line B', 'Line B', 'Line B']

Checking for date columns:
- period_end: Successfully converted to datetime
- budget_sales: Successfully converted to datetime
- budget_volume: Successfully converted to datetime
- budget_price: Successfully converted to datetime
- budget_marketing: Successfully converted to datetime
- budget_raw_mat_cost: Successfully converted to datetime
- actual_sales: Successfully converted to datetime
- actual_volume: Successfully converted to datetime
- actual_price: Successfully converted to datetime
- actual_marketing: Successfully converted to datetime
- actual_raw_mat_cost: Successfully converted to datetime

Detected 11 potential date columns: ['period_end', 'budget_sales', 'budget_volume', 'budget_price', 'budget_marketing', 'budget_raw_mat_cost', 'actual_sales', 'actual_volume', 'actual_price', 'actual_marketing', 'actual_raw_mat_cost']


----- Testing TimescaleAnalyzer on sales_budget_actuals.csv -----
âœ… SUCCESS: TimescaleAnalyzer detected date column
First 500 characters of analysis:
# ðŸ“Š Automatic Timescale Analysis
*Analysis generated based on time series patterns in your data*

## ðŸ“… Year-over-Year (YoY) Analysis
### Budget Sales
- **Latest yearly (2024)**: increased by 23.30%
- **Overall trend**: fluctuating over 2 periods
- **Largest increase**: 23.30% in 2024
- **Average change**: 23.30% per year

### Budget Volume
- **Latest yearly (2024)**: increased by 23.31%
- **Overall trend**: fluctuating over 2 periods
- **Largest increase**: 23.31% in 2024
- **Average change**: 2...

TEST: Date detection in sales_budget_actuals.csv - PASSED
Details: TimescaleAnalyzer successfully detected date column


----- Testing file: sample_financial_data.csv -----
Successfully loaded file with 365 rows and 8 columns
Columns in the dataset:
- Date: object, Sample: ['2023-01-01', '2023-01-02', '2023-01-03']
- Revenue: float64, Sample: [54967.14, 48617.36, 56476.89]
- Costs: float64, Sample: [27993.9, 31120.46, 30062.96]
- Profit: float64, Sample: [26973.24, 17496.9, 26413.93]
- Department: object, Sample: ['Operations', 'Marketing', 'Marketing']
- Region: object, Sample: ['East', 'West', 'North']
- Product: object, Sample: ['Product_B', 'Product_A', 'Product_C']
- Customer_Satisfaction: float64, Sample: [4.1, 3.5, 4.9]

Checking for date columns:
- Date: Successfully converted to datetime
- Revenue: Successfully converted to datetime
- Costs: Successfully converted to datetime
- Profit: Successfully converted to datetime
- Customer_Satisfaction: Successfully converted to datetime

Detected 5 potential date columns: ['Date', 'Revenue', 'Costs', 'Profit', 'Customer_Satisfaction']


----- Testing TimescaleAnalyzer on sample_financial_data.csv -----
âœ… SUCCESS: TimescaleAnalyzer detected date column
First 500 characters of analysis:
# ðŸ“Š Automatic Timescale Analysis
*Analysis generated based on time series patterns in your data*

## ðŸ“… Year-over-Year (YoY) Analysis
*Insufficient yearly data for Revenue analysis*

*Insufficient yearly data for Costs analysis*

*Insufficient yearly data for Profit analysis*

*Insufficient yearly data for Customer_Satisfaction analysis*

## ðŸ“Š Quarter-over-Quarter (QoQ) Analysis
### Revenue
- **Latest quarterly (2023Q4)**: increased by 1.67%
- **Overall trend**: fluctuating over 4 periods
- **Lar...

TEST: Date detection in sample_financial_data.csv - PASSED
Details: TimescaleAnalyzer successfully detected date column


----- Testing file: sample_data/sales_budget_actuals.csv -----
Successfully loaded file with 24 rows and 13 columns
Columns in the dataset:
- period_end: object, Sample: ['2024-02-29', '2024-07-31', '2023-04-30']
- budget_sales: int64, Sample: [128260, 139130, 106521]
- budget_volume: int64, Sample: [2565, 2782, 2130]
- budget_price: float64, Sample: [50.0, 50.0, 50.0]
- budget_marketing: int64, Sample: [6173, 8184, 13046]
- budget_raw_mat_cost: int64, Sample: [20202, 29422, 31878]
- actual_sales: int64, Sample: [128346, 124496, 117239]
- actual_volume: int64, Sample: [2488, 2517, 2455]
- actual_price: float64, Sample: [51.59, 49.46, 47.76]
- actual_marketing: int64, Sample: [4950, 7349, 12416]
- actual_raw_mat_cost: int64, Sample: [18554, 29460, 34387]
- region: object, Sample: ['South', 'West', 'West']
- product_line: object, Sample: ['Line B', 'Line B', 'Line B']

Checking for date columns:
- period_end: Successfully converted to datetime
- budget_sales: Successfully converted to datetime
- budget_volume: Successfully converted to datetime
- budget_price: Successfully converted to datetime
- budget_marketing: Successfully converted to datetime
- budget_raw_mat_cost: Successfully converted to datetime
- actual_sales: Successfully converted to datetime
- actual_volume: Successfully converted to datetime
- actual_price: Successfully converted to datetime
- actual_marketing: Successfully converted to datetime
- actual_raw_mat_cost: Successfully converted to datetime

Detected 11 potential date columns: ['period_end', 'budget_sales', 'budget_volume', 'budget_price', 'budget_marketing', 'budget_raw_mat_cost', 'actual_sales', 'actual_volume', 'actual_price', 'actual_marketing', 'actual_raw_mat_cost']


----- Testing TimescaleAnalyzer on sample_data/sales_budget_actuals.csv -----
âœ… SUCCESS: TimescaleAnalyzer detected date column
First 500 characters of analysis:
# ðŸ“Š Automatic Timescale Analysis
*Analysis generated based on time series patterns in your data*

## ðŸ“… Year-over-Year (YoY) Analysis
### Budget Sales
- **Latest yearly (2024)**: increased by 23.30%
- **Overall trend**: fluctuating over 2 periods
- **Largest increase**: 23.30% in 2024
- **Average change**: 23.30% per year

### Budget Volume
- **Latest yearly (2024)**: increased by 23.31%
- **Overall trend**: fluctuating over 2 periods
- **Largest increase**: 23.31% in 2024
- **Average change**: 2...

TEST: Date detection in sample_data/sales_budget_actuals.csv - PASSED
Details: TimescaleAnalyzer successfully detected date column


----- Testing file: sample_data/sample_stock_data.csv -----
Successfully loaded file with 20 rows and 8 columns
Columns in the dataset:
- Date: object, Sample: ['2024-01-01', '2024-01-02', '2024-01-03']
- Symbol: object, Sample: ['AAPL', 'AAPL', 'AAPL']
- Open: float64, Sample: [182.5, 184.5, 186.0]
- High: float64, Sample: [185.2, 186.9, 188.5]
- Low: float64, Sample: [181.8, 183.1, 185.5]
- Close: float64, Sample: [184.3, 186.2, 187.8]
- Volume: int64, Sample: [15000000, 18500000, 16200000]
- Change_%: float64, Sample: [0.98, 1.03, 0.86]

Checking for date columns:
- Date: Successfully converted to datetime
- Open: Successfully converted to datetime
- High: Successfully converted to datetime
- Low: Successfully converted to datetime
- Close: Successfully converted to datetime
- Volume: Successfully converted to datetime
- Change_%: Successfully converted to datetime

Detected 7 potential date columns: ['Date', 'Open', 'High', 'Low', 'Close', 'Volume', 'Change_%']


----- Testing TimescaleAnalyzer on sample_data/sample_stock_data.csv -----
âœ… SUCCESS: TimescaleAnalyzer detected date column
First 500 characters of analysis:
# ðŸ“Š Automatic Timescale Analysis
*Analysis generated based on time series patterns in your data*

## ðŸ“… Year-over-Year (YoY) Analysis
*Insufficient yearly data for Open analysis*

*Insufficient yearly data for High analysis*

*Insufficient yearly data for Low analysis*

*Insufficient yearly data for Close analysis*

*Insufficient yearly data for Volume analysis*

*Insufficient yearly data for Change_% analysis*

## ðŸ“Š Quarter-over-Quarter (QoQ) Analysis
*Insufficient quarterly data for Open analys...

TEST: Date detection in sample_data/sample_stock_data.csv - PASSED
Details: TimescaleAnalyzer successfully detected date column


----- Testing file: sample_data/comprehensive_sales_data.csv -----
Successfully loaded file with 100 rows and 28 columns
Columns in the dataset:
- transaction_id: object, Sample: ['TXN_00081', 'TXN_00085', 'TXN_00034']
- date: object, Sample: ['2023-03-22', '2023-03-26', '2023-02-03']
- region: object, Sample: ['North America', 'Middle East', 'Europe']
- product_line: object, Sample: ['Economy Line', 'Standard Line', 'Enterprise Line']
- channel: object, Sample: ['Direct', 'Online', 'Wholesale']
- customer_segment: object, Sample: ['Enterprise', 'Consumer', 'Consumer']
- budget_sales: int64, Sample: [61254, 30420, 69739]
- actual_sales: int64, Sample: [60627, 28579, 73742]
- sales_variance: int64, Sample: [-627, -1841, 4003]
- sales_variance_pct: float64, Sample: [-1.02, -6.05, 5.74]
- budget_volume: int64, Sample: [1361, 676, 1549]
- actual_volume: int64, Sample: [1330, 628, 1617]
- volume_variance: int64, Sample: [-31, -48, 68]
- budget_price: float64, Sample: [43.9, 40.96, 39.71]
- actual_price: float64, Sample: [45.58, 45.51, 45.6]
- price_variance: float64, Sample: [1.6799999999999995, 4.549999999999997, 5.890000000000001]
- discount_pct: float64, Sample: [2.85, 0.07, 1.81]
- budget_marketing: int64, Sample: [5939, 4665, 5710]
- actual_marketing: int64, Sample: [5232, 5584, 5614]
- budget_cogs: int64, Sample: [33179, 32955, 37776]
- actual_cogs: int64, Sample: [33838, 35382, 39007]
- budget_labor: int64, Sample: [8227, 12266, 6697]
- actual_labor: int64, Sample: [6783, 11205, 5938]
- budget_overhead: int64, Sample: [2328, 2393, 2458]
- actual_overhead: int64, Sample: [2386, 2501, 2599]
- sales_rep: object, Sample: ['Rep_10', 'Rep_14', 'Rep_15']
- customer_satisfaction: int64, Sample: [3, 4, 3]
- business_event: object, Sample: ['Normal', 'Normal', 'Normal']

Checking for date columns:
- date: Successfully converted to datetime
- budget_sales: Successfully converted to datetime
- actual_sales: Successfully converted to datetime
- sales_variance: Successfully converted to datetime
- sales_variance_pct: Successfully converted to datetime
- budget_volume: Successfully converted to datetime
- actual_volume: Successfully converted to datetime
- volume_variance: Successfully converted to datetime
- budget_price: Successfully converted to datetime
- actual_price: Successfully converted to datetime
- price_variance: Successfully converted to datetime
- discount_pct: Successfully converted to datetime
- budget_marketing: Successfully converted to datetime
- actual_marketing: Successfully converted to datetime
- budget_cogs: Successfully converted to datetime
- actual_cogs: Successfully converted to datetime
- budget_labor: Successfully converted to datetime
- actual_labor: Successfully converted to datetime
- budget_overhead: Successfully converted to datetime
- actual_overhead: Successfully converted to datetime
- customer_satisfaction: Successfully converted to datetime

Detected 21 potential date columns: ['date', 'budget_sales', 'actual_sales', 'sales_variance', 'sales_variance_pct', 'budget_volume', 'actual_volume', 'volume_variance', 'budget_price', 'actual_price', 'price_variance', 'discount_pct', 'budget_marketing', 'actual_marketing', 'budget_cogs', 'actual_cogs', 'budget_labor', 'actual_labor', 'budget_overhead', 'actual_overhead', 'customer_satisfaction']


----- Testing TimescaleAnalyzer on sample_data/comprehensive_sales_data.csv -----
âœ… SUCCESS: TimescaleAnalyzer detected date column
First 500 characters of analysis:
# ðŸ“Š Automatic Timescale Analysis
*Analysis generated based on time series patterns in your data*

## ðŸ“… Year-over-Year (YoY) Analysis
*Insufficient yearly data for budget_sales analysis*

*Insufficient yearly data for actual_sales analysis*

*Insufficient yearly data for sales_variance analysis*

*Insufficient yearly data for sales_variance_pct analysis*

*Insufficient yearly data for budget_volume analysis*

*Insufficient yearly data for actual_volume analysis*

*Insufficient yearly data for vol...

TEST: Date detection in sample_data/comprehensive_sales_data.csv - PASSED
Details: TimescaleAnalyzer successfully detected date column


===== Test date_column_detection SUCCESSFUL =====
Completed: 2025-06-29 21:03:48
============================================================
